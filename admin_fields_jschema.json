{
  "properties": {
  "node_update_interval" : {
    "type" :  "string",
    "title" :  "Node update interval",
    "enum" : [
      "hourly",
      "daily",
      "weekly",
      "manual"
    ],
    "enumNames" : [
      "Hourly",
      "Daily",
      "Weekly",
      "Manual only"
    ],
    "default" : "weekly",
    "description" : "How often should locally stored nodes be updated from the network?",
    "group" : "node_settings"
  },
  "updated_node_post_status" : {
    "type" :  "string",
    "title" :  "Updated node post status",
    "enum" : [
      "no_change",
      "draft"
    ],
    "enumNames" : [
      "No change",
      "Draft"
    ],
    "default" : "no_change",
    "group" : "node_settings",
    "description" : "Post status for nodes that have been updated from the network. Set to 'Draft' if updated nodes should be reviewed before they are publicly viewable."
  },
  "new_node_post_status" : {
    "type" :  "string",
    "title" :  "New node post status",
    "inputAs" : "select",
    "enum" : [
      "publish",
      "draft"
    ],
    "enumNames" : [
      "Publish",
      "Draft"
    ],
    "default" : "publish",
    "group" : "node_settings",
    "description" : "Post status for new nodes from the network. Set to 'Draft' if nodes should be reviewed before they are publicly viewable."
  },
  "filters" : {
    "type" :  "array",
    "items" : {
      "type" : "object",
      "properties" : {
        "field" : {
          "type" : "string",
          "title" : "Field"
        },
        "comparison" : {
          "type" : "string",
          "title" : "Comparison",
          "enum" : [
            "equals",
            "includes",
            "isGreaterThan",
            "isLessThan",
            "isIn"
          ],
          "enumNames" : [
            "Equals",
            "Includes",
            "Is greater than",
            "Is less than",
            "Is in"
          ]
        },
        "value" : {
          "type" : "string",
          "title" : "Value"
        }
      }
    },
    "title" :  "Filters",
    "description" : "Set parameters to limit the nodes that will be fetched and saved.",
    "group" : "general"
  },
  "indices" : {
    "type" :  "array",
    "items" : {
      "type" : "object",
      "properties" : {
        "url" : {
          "type" : "string",
          "title" : "URL"
        },
        "api_key" : {
          "type" :  "string",
          "title" :  "API key",
          "inputAs" : "text"
        },
        "use_api_key_for_nodes" : {
          "type" :  "boolean",
          "title" :  "Include API key in node requests",
          "description" : "If checked, the API key will also be sent when requesting individual nodes. This should only be used for centralized providers of node data!"
        },
        "api_basic_auth_user" : {
          "type" :  "string",
          "title" :  "Basic Auth user name",
          "description" : "User name for data sources that are protected by Basic Authentication."
        },
        "api_basic_auth_pass" : {
          "type" :  "string",
          "title" :  "Basic Auth password",
          "description" : "Password for data sources that are protected by Basic Authentication."
        }
      }
    },
    "title" :  "Data sources",
    "description" : "Parameters for the data sources from which to fetch node data.",
    "required" : ["url"],
    "group" : "data_sources"
  },
  "schemas" : {
    "title" : "Schema files",
    "type" :  "array",
    "items" : {
      "type" : "object",
      "properties" : {
        "location" : {
          "type" : "string",
          "title" : "Schema file location"
        }
      }
    },
    "description" : "Schemas to use for local data model and add as options for queries. The schema file location can be local (on this server, for example uploaded to the WP media library), or remote (for example in the Murmurations schema repository or library service).",
    "group" : "data_sources"
  },
  "directory_template" : {
    "type" :  "string",
    "title" :  "Directory template",
    "inputAs" : "template_selector",
    "validateAs" : "text",
    "default" : "default",
    "description" : "Template file to use for directory shortcode display.",
    "group" : "node_settings"
  },
  "ignore_date" : {
    "type" :  "boolean",
    "title" :  "Ignore node update date when fetching nodes",
    "inputAs" : "checkbox",
    "validateAs" : "text",
    "description" : "If unchecked, only nodes that have been updated since they were last requested will be fetched.",
    "group" : "node_settings"
  },
  "feed_update_interval" : {
    "type" :  "string",
    "title" :  "Feed update interval",
    "inputAs" : "select",
    "enum" : [
      "hourly",
      "daily",
      "weekly",
      "manual"
    ],
    "enumNames" : [
      "Hourly",
      "Daily",
      "Weekly",
      "Manual only"
    ],
    "validateAs" : "text",
    "default" : "daily",
    "description" : "How often should locally stored feed items be updated?",
    "group" : "feed_settings"
  },
  "max_feed_items" : {
    "type" :  "integer",
    "title" :  "Max number of feed items total",
    "inputAs" : "text",
    "validateAs" : "int",
    "default" : 30,
    "description" : "Maximum number of feed items to fetch from node sites",
    "group" : "feed_settings"
  },
  "max_feed_items_per_node" : {
    "type" :  "integer",
    "title" :  "Max number of feed items per node",
    "inputAs" : "text",
    "validateAs" : "int",
    "default" : 4,
    "description" : "Use this if some nodes are producing a lot of posts and you want to include more sources.",
    "group" : "feed_settings"
  },
  "default_feed_item_status" : {
    "type" :  "string",
    "title" :  "Default feed item status",
    "enum" : [
      "publish",
      "draft"
    ],
    "enumNames" : [
      "Publish",
      "Draft"
    ],
    "validateAs" : "text",
    "default" : "publish",
    "group" : "feed_settings"
  },
  "map_origin" : {
    "type" :  "string",
    "title" :  "Map origin coordinates",
    "inputAs" : "text",
    "group" : "map_settings",
    "default" : "49.505, -29.09",
    "description" : "Location for the center of the map. Latitude and longitude (as signed floating point numbers), separated by a comma."
  },
  "map_scale" : {
    "type" :  "string",
    "title" :  "Map scale",
    "inputAs" : "text",
    "group" : "map_settings",
    "default" : "4",
    "description" : "How zoomed in/zoomed out the map should be at initial display. 1 = whole planet shown at the height of the map display."
  },
  "mapbox_token" : {
    "type" :  "string",
    "title" :  "Mapbox API key",
    "inputAs" : "text",
    "group" : "map_settings",
    "description" : "API key for Mapbox, tile provider for Leaflet. See https://www.mapbox.com/studio/account/tokens/"
  },
  "enable_feeds" : {
    "type" :  "boolean",
    "title" :  "Enable feeds",
    "group" : "config",
    "default" : false,
    "description" : "Enable collecting feed data from nodes."
  },
  "logging_mode" : {
    "type" :  "string",
    "enum" : [
      "none",
      "single",
      "append"
    ],
    "enumNames" : [
      "None (don't write to log file)",
      "Single (overwrite log with each request)",
      "Append (add logs for each request to log file)"
    ],
    "title" :  "Logging mode",
    "group" : "config",
    "default" : "none",
    "description" : "Set whether and how log files are written"
  }
}
}
