{
  "properties": {
  "node_update_interval" : {
    "type" :  "string",
    "title" :  "Node update interval",
    "enum" : [
      "hourly",
      "daily",
      "weekly",
      "manual"
    ],
    "enumNames" : [
      "Hourly",
      "Daily",
      "Weekly",
      "Manual only"
    ],
    "default" : "weekly",
    "description" : "How often should locally stored nodes be updated from the network?",
    "group" : "node_settings"
  },
  "filters" : {
    "type" :  "array",
    "items" : {
      "type" : "object",
      "properties" : {
        "subject" : {
          "type" : "string",
          "title" : "Field"
        },
        "predicate" : {
          "type" : "string",
          "title" : "Comparison",
          "enum" : [
            "equals",
            "includes",
            "isGreaterThan",
            "isLessThan",
            "isIn"
          ],
          "enumNames" : [
            "Equals",
            "Includes",
            "Is greater than",
            "Is less than",
            "Is in"
          ]
        },
        "object" : {
          "type" : "string",
          "title" : "Value"
        }
      }

    },
    "title" :  "Filters",
    "description" : "Set parameters to limit the nodes that will be fetched and saved."
  },
  "index_url" : {
    "type" :  "string",
    "maxLength" : 1000,
    "title" :  "Index URL",
    "inputAs" : "text",
    "validateAs" : "url",
    "default" : "https://murmurations.network/api/index",
    "comment" : "",
    "group" : "api_settings"
  },
  "directory_template" : {
    "type" :  "string",
    "title" :  "Directory template",
    "inputAs" : "template_selector",
    "validateAs" : "text",
    "default" : "default",
    "description" : "Template file to use for directory shortcode display.",
    "group" : "node_settings"
  },
  "ignore_date" : {
    "type" :  "boolean",
    "title" :  "Ignore node update date when fetching nodes",
    "inputAs" : "checkbox",
    "validateAs" : "text",
    "description" : "If unchecked, only nodes that have been updated since they were last requested will be fetched.",
    "group" : "node_settings"
  },
  "feed_update_interval" : {
    "type" :  "string",
    "title" :  "Feed update interval",
    "inputAs" : "select",
    "enum" : [
      "hourly",
      "daily",
      "weekly",
      "manual"
    ],
    "enumNames" : [
      "Hourly",
      "Daily",
      "Weekly",
      "Manual only"
    ],
    "validateAs" : "text",
    "default" : "daily",
    "description" : "How often should locally stored feed items be updated?",
    "group" : "feed_settings"
  },
  "max_feed_items" : {
    "type" :  "integer",
    "title" :  "Max number of feed items total",
    "inputAs" : "text",
    "validateAs" : "int",
    "default" : 30,
    "description" : "Maximum number of feed items to fetch from node sites",
    "group" : "feed_settings"
  },
  "max_feed_items_per_node" : {
    "type" :  "integer",
    "title" :  "Max number of feed items per node",
    "inputAs" : "text",
    "validateAs" : "int",
    "default" : 4,
    "description" : "Use this if some nodes are producing a lot of posts and you want to include more sources.",
    "group" : "feed_settings"
  },
  "default_feed_item_status" : {
    "type" :  "string",
    "title" :  "Default feed item status",
    "enum" : [
      "publish",
      "draft"
    ],
    "enumNames" : [
      "Publish",
      "Draft"
    ],
    "validateAs" : "text",
    "default" : "publish",
    "group" : "feed_settings"
  },
  "api_key" : {
    "type" :  "string",
    "title" :  "API key",
    "inputAs" : "text",
    "group" : "api_settings"
  },
  "use_api_key_for_nodes" : {
    "type" :  "boolean",
    "title" :  "Include API key in node requests",
    "inputAs" : "checkbox",
    "group" : "api_settings",
    "description" : "If checked, the API key will also be sent when requesting individual nodes. This should only be used for centralized providers of node data!"
  },
  "api_basic_auth_user" : {
    "type" :  "string",
    "title" :  "Basic Auth user name",
    "inputAs" : "text",
    "group" : "api_settings",
    "description" : "User name for data sources that are protected by Basic Authentication."
  },
  "api_basic_auth_pass" : {
    "type" :  "string",
    "title" :  "Basic Auth password",
    "inputAs" : "text",
    "group" : "api_settings",
    "description" : "Password for data sources that are protected by Basic Authentication."
  },
  "index_2_url" : {
    "type" :  "string",
    "maxLength" : 1000,
    "title" :  "Secondary Index URL",
    "inputAs" : "text",
    "validateAs" : "url",
    "default" : "https://murmurations.network/api/index",
    "comment" : "",
    "group" : "api_settings"
  },
  "index_2_api_key" : {
    "type" :  "string",
    "title" :  "Secondary API key",
    "inputAs" : "text",
    "group" : "api_settings"
  },
  "map_origin" : {
    "type" :  "string",
    "title" :  "Map origin coordinates",
    "inputAs" : "text",
    "group" : "map_settings",
    "default" : "49.505, -29.09",
    "description" : "Location for the center of the map. Latitude and longitude (as signed floating point numbers), separated by a comma."
  },
  "map_scale" : {
    "type" :  "string",
    "title" :  "Map scale",
    "inputAs" : "text",
    "group" : "map_settings",
    "default" : "4",
    "description" : "How zoomed in/zoomed out the map should be at initial display. 1 = whole planet shown at the height of the map display."
  },
  "mapbox_token" : {
    "type" :  "string",
    "title" :  "Mapbox API key",
    "inputAs" : "text",
    "group" : "map_settings",
    "description" : "API key for Mapbox, tile provider for Leaflet. See https://www.mapbox.com/studio/account/tokens/"
  },
  "updated_node_post_status" : {
    "type" :  "string",
    "title" :  "Updated node post status",
    "enum" : [
      "no_change",
      "draft"
    ],
    "enumNames" : [
      "No change",
      "Draft"
    ],
    "default" : "no_change",
    "group" : "node_settings",
    "description" : "Post status for nodes that have been updated from the network. Set to 'Draft' if updated nodes should be reviewed before they are publicly viewable."
  },
  "new_node_post_status" : {
    "type" :  "string",
    "title" :  "New node post status",
    "inputAs" : "select",
    "enum" : [
      "publish",
      "draft"
    ],
    "enumNames" : [
      "Publish",
      "Draft"
    ],
    "default" : "publish",
    "group" : "node_settings",
    "description" : "Post status for new nodes from the network. Set to 'Draft' if nodes should be reviewed before they are publicly viewable."
  }
}
}
