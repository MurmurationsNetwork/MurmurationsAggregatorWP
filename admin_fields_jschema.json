{
  "properties": {
    "node_update_interval" : {
      "type" :  "string",
      "title" :  "Node update interval",
      "enum" : [
        "hourly",
        "daily",
        "weekly",
        "manual"
      ],
      "enumNames" : [
        "Hourly",
        "Daily",
        "Weekly",
        "Manual only"
      ],
      "default" : "weekly",
      "description" : "How often should locally stored nodes be updated from the network?",
      "group" : "general"
    },
    "ignore_date" : {
      "type" :  "boolean",
      "title" :  "Ignore node update date when fetching nodes",
      "inputAs" : "checkbox",
      "validateAs" : "text",
      "description" : "If unchecked, only nodes that have been updated since they were last requested will be fetched.",
      "group" : "general"
    },
    "updated_node_post_status" : {
      "type" :  "string",
      "title" :  "Updated node post status",
      "enum" : [
        "no_change",
        "draft"
      ],
      "enumNames" : [
        "No change",
        "Draft"
      ],
      "default" : "no_change",
      "group" : "general",
      "description" : "Post status for nodes that have been updated from the network. Set to 'Draft' if updated nodes should be reviewed before they are publicly viewable."
    },
    "new_node_post_status" : {
      "type" :  "string",
      "title" :  "New node post status",
      "inputAs" : "select",
      "enum" : [
        "publish",
        "draft"
      ],
      "enumNames" : [
        "Publish",
        "Draft"
      ],
      "default" : "publish",
      "group" : "general",
      "description" : "Post status for new nodes from the network. Set to 'Draft' if nodes should be reviewed before they are publicly viewable."
    },
    "nodes_per_page" : {
      "type" :  "integer",
      "title" :  "Nodes per page",
      "default" : 10,
      "group" : "general",
      "description" : "How many nodes to show per page (in client-side interfaces)"
    },
    "filters" : {
      "type" :  "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "field" : {
            "type" : "string",
            "title" : "Field"
          },
          "comparison" : {
            "type" : "string",
            "title" : "Comparison",
            "enum" : [
              "equals",
              "includes",
              "isGreaterThan",
              "isLessThan",
              "isIn"
            ],
            "enumNames" : [
              "Equals",
              "Includes",
              "Is greater than",
              "Is less than",
              "Is in"
            ]
          },
          "value" : {
            "type" : "string",
            "title" : "Value"
          }
        }
      },
      "title" :  "Filters",
      "description" : "Set parameters to limit the items that will be fetched and saved. Items must match all the conditions defined here to be included.",
      "group" : "config"
    },
    "indices" : {
      "type" :  "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string",
            "title" : "URL"
          },
          "api_key" : {
            "type" :  "string",
            "title" :  "API key",
            "inputAs" : "text"
          },
          "use_api_key_for_nodes" : {
            "type" :  "boolean",
            "title" :  "Include API key in node requests",
            "description" : "If checked, the API key will also be sent when requesting individual nodes. This should only be used for centralized providers of node data!"
          },
          "api_basic_auth_user" : {
            "type" :  "string",
            "title" :  "Basic Auth user name",
            "description" : "User name for data sources that are protected by Basic Authentication."
          },
          "api_basic_auth_pass" : {
            "type" :  "string",
            "title" :  "Basic Auth password",
            "description" : "Password for data sources that are protected by Basic Authentication."
          },
          "queryable_fields" : {
            "title" :  "Queryable fields",
            "default" : "country,location,schema",
            "type" :  "string",
            "group" : "config",
            "description" : "Fields that can be used when querying this index, as a comma-delimited string"
          },
          "parameters" : {
            "type" :  "array",
            "items" : {
              "type" : "object",
              "properties" : {
                "parameter" : {
                  "type" : "string",
                  "title" : "Parameter name"
                },
                "value" : {
                  "type" : "string",
                  "title" : "Value"
                }
              }
            },
            "title" :  "Index query parameters",
            "description" : "Set parameters that will be passed with the query string to this index."
          },
          "disabled" : {
            "type" : "boolean",
            "default" : false,
            "title" :  "Turn off this data source"
          }
        }
      },
      "title" :  "Data sources",
      "description" : "Parameters for the data sources from which to fetch node data.",
      "required" : ["url"],
      "group" : "data_sources"
    },
    "schemas" : {
      "title" : "Schema files",
      "type" :  "array",
      "items" : {
        "type" : "object",
        "properties" : {
          "location" : {
            "type" : "string",
            "title" : "Schema file location"
          }
        }
      },
      "description" : "Schemas to use for local data model and add as options for queries. The schema file location can be local (on this server, for example uploaded to the WP media library), or remote (for example in the Murmurations schema repository or library service).",
      "group" : "data_sources"
    },
    "field_map_url" : {
      "title" : "URL for field map file",
      "type" :  "string",
      "description" : "The web-accessible location for a JSON file that maps fields from the data schema to fields in the WP database.",
      "group" : "data_sources"
    },
    "template_override_path" : {
      "type" :  "string",
      "title" :  "Template override path",
      "description" : "Local path to an alternate template directory. This path overrides the normal template hierarchy.",
      "group" : "config"
    },
    "feed_update_interval" : {
      "type" :  "string",
      "title" :  "Feed update interval",
      "inputAs" : "select",
      "enum" : [
        "hourly",
        "daily",
        "weekly",
        "manual"
      ],
      "enumNames" : [
        "Hourly",
        "Daily",
        "Weekly",
        "Manual only"
      ],
      "validateAs" : "text",
      "default" : "daily",
      "description" : "How often should locally stored feed items be updated?",
      "group" : "feed_settings"
    },
    "max_feed_items" : {
      "type" :  "integer",
      "title" :  "Max number of feed items total",
      "inputAs" : "text",
      "validateAs" : "int",
      "default" : 30,
      "description" : "Maximum number of feed items to fetch from node sites",
      "group" : "feed_settings"
    },
    "max_feed_items_per_node" : {
      "type" :  "integer",
      "title" :  "Max number of feed items per node",
      "inputAs" : "text",
      "validateAs" : "int",
      "default" : 4,
      "description" : "Use this if some nodes are producing a lot of posts and you want to include more sources.",
      "group" : "feed_settings"
    },
    "default_feed_item_status" : {
      "type" :  "string",
      "title" :  "Default feed item status",
      "enum" : [
        "publish",
        "draft"
      ],
      "enumNames" : [
        "Publish",
        "Draft"
      ],
      "validateAs" : "text",
      "default" : "publish",
      "group" : "feed_settings"
    },
    "map_origin" : {
      "type" :  "string",
      "title" :  "Map origin coordinates",
      "inputAs" : "text",
      "group" : "map_settings",
      "default" : "49.505, -29.09",
      "description" : "Location for the center of the map. Latitude and longitude (as signed floating point numbers), separated by a comma."
    },
    "map_scale" : {
      "type" :  "string",
      "title" :  "Map scale",
      "inputAs" : "text",
      "group" : "map_settings",
      "default" : "4",
      "description" : "How zoomed in/zoomed out the map should be at initial display. 1 = whole planet shown at the height of the map display."
    },
    "mapbox_token" : {
      "type" :  "string",
      "title" :  "Mapbox API key",
      "inputAs" : "text",
      "group" : "map_settings",
      "description" : "API key for Mapbox, tile provider for Leaflet. See https://www.mapbox.com/studio/account/tokens/"
    },
    "logging_mode" : {
      "type" :  "string",
      "enum" : [
        "none",
        "single",
        "append"
      ],
      "enumNames" : [
        "None (don't write to log file)",
        "Single (overwrite log with each request)",
        "Append (add logs for each request to log file)"
      ],
      "title" :  "Logging mode",
      "group" : "config",
      "default" : "none",
      "description" : "Set whether and how log files are written"
    },
    "filter_fields" : {
      "type" :  "array",
      "title" : "Fields for front-end filters",
      "items" : {
        "type" : "string"
      },
      "description" : "Fields to show in front-end filters for map and directory",
      "group" : "interface"
    },
    "plugin_name" : {
      "default" : "Murmurations Aggregator",
      "type" :  "string",
      "title" :  "Plugin name",
      "group" : "config",
      "description" : "What the plugin is called in the admin interface."
    },
    "node_name" : {
      "title" :  "Node name",
      "default" : "Murmurations Node",
      "type" :  "string",
      "group" : "config",
      "description" : "What nodes are called in the admin interface (singular)."
    },
    "node_name_plural" : {
      "title" :  "Node name plural",
      "default" : "Murmurations Nodes",
      "type" :  "string",
      "group" : "config",
      "description" : "What nodes are called in the admin interface (plural)."
    },
    "node_slug" : {
      "title" :  "Node slug",
      "default" : "nodes",
      "type" :  "string",
      "group" : "config",
      "description" : "String used in the path for archive and single node URLs."
    },
    "plugin_slug" : {
      "title" :  "Plugin slug",
      "default" : "murmurations",
      "type" :  "string",
      "group" : "config",
      "description" : "String used to prefix shortcodes and admin settings pages."
    },
    "list_fields" : {
      "default" : ["org_type_tags","tags"],
      "type" :  "array",
      "title" :  "Fields for directory display",
      "items" : {
        "type" : "string"
      },
      "group" : "interface",
      "description" : "Array of fields to include in list display (may be irrelevant in custom templates)."
    },
    "api_node_format" : {
      "default" : "JSON",
      "type" :  "string",
      "enum" : ["JSON","HTML"],
      "title" :  "Node format sent to front-end interfaces",
      "group" : "general",
      "description" : "For React interfaces, set whether the interface should request JSON data (layout handled by the interface), or HTML (layout handled by templates). Choose HTML to use overridable templates output in the React interfaces."
    },
    "node_single_url_field" : {
      "title" :  "Field for single node URL",
      "type" :  "string",
      "group" : "config",
      "description" : "Field to use for the link to view a single node. If unset, single nodes will link to the single post page. Can be used to set an external location to view a single node."
    },
    "node_single" : {
      "title" :  "Show link to single nodes",
      "type" :  "boolean",
      "group" : "config",
      "description" : "Link to single node pages from directory/map. By default this will use the WP post type. Can be overridden with node_single_url_field for custom single URLs",
      "default" : true
    },
    "log_file" : {
      "title" :  "Log file location",
      "type" :  "string",
      "group" : "config",
      "description" : "File to write logs to. Must be writable."
    },
    "meta_prefix" : {
      "title" :  "Meta prefix",
      "default" : "murmurations_",
      "type" :  "string",
      "group" : "config",
      "description" : "Prefix for meta values saved to the WP DB."
    },
    "api_route" : {
      "title" :  "API route",
      "default" : "murmurations-aggregator/v1",
      "type" :  "string",
      "group" : "config",
      "description" : "API route identifier to define the route to access locally stored nodes from client-side interfaces or external sites"
    },
    "update_time" : {
      "title" :  "Update time",
      "type" :  "integer",
      "group" : "config",
      "description" : "Timestamp of last update from the network"
    },
    "enable_feeds" : {
      "type" :  "boolean",
      "title" :  "Enable feeds (EXPERIMENTAL)",
      "group" : "config",
      "default" : false,
      "description" : "Enable collecting feed data from nodes. This feature is still under development and may cause problems for your site. Not recommended for production use."
    },
    "enable_node_edit" : {
      "title" :  "Enable editing node metadata (EXPERIMENTAL)",
      "type" :  "boolean",
      "group" : "config",
      "default" : false,
      "description" : "Enable editing node metadata in the admin interface. This experimental feature may not work as expected."
    }
  }
}
